package main.java.NQPParticipantGroupSetupAPIResponse;

import static io.restassured.RestAssured.given;
import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertNotEquals;
import static org.testng.Assert.assertTrue;

import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.testng.annotations.Test;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectWriter;
import com.jayway.jsonpath.JsonPath;

import io.restassured.config.RestAssuredConfig;
import io.restassured.config.SSLConfig;
import io.restassured.http.ContentType;
import main.java.Utils.APITestConfig;
import main.java.Utils.SQLConfig;


/**
 * 
 * Creating Participant Group for a Plan Validation Using Rest Assure framework
 * @author A619786
 *
 */

public class PostCreateParticipantGroupforaPlanValidation extends APITestConfig{
	
	String query = null;
	boolean db;

	Map<String, List<String>> dbMap; 
	LinkedList<String> dbresponse = new LinkedList<String>();
	String dbkey = null;

	@Test
	public void postCreateParticipantGroupforaPlanAPI() throws JsonProcessingException, ParseException, SQLException, ClassNotFoundException {
	
		dbMap = new HashMap<String, List<String>>();
		log.info("Running initiateRequest Test");
		log.info("OAuth Token generated successfully: " + oAuthToken);
		
		try {
			(response = given()
					.config(RestAssuredConfig.config().sslConfig(SSLConfig.sslConfig().relaxedHTTPSValidation()))
					.contentType(ContentType.JSON)
					.headers("Authorization", "Bearer " + oAuthToken,
							"FID-LOG-TRACKING-ID","XXX12345",
							"FID-PRINCIPAL-ROLE","fidRole","FID-USER-ID-TYPE","FidEmpId","FID-USER-ID","a619786")
					.body(new File("src/main/java/NQPParticipantGroupRequestBody/PostCreateParticipantGroupforaPlanValidation.json"))
					.when()
					.post(initiateReqURL_PG+"participant-groups?dataState=Live&planType=DC")).then();
					
			log.info("HTTP Status Code: " + String.valueOf(response.getStatusCode()));
			log.info("Response body: " + response.getBody().asString()); 	
			
			assertEquals(201, response.getStatusCode());

			String query = (String) SqlQueries.get("Plan_Creation");
			System.out.println(query);

			SQLConfig sr = new SQLConfig();
			ResultSet rs = sr.getQueryResult(query);
			System.out.println(rs + "printed metadata");
			ResultSetMetaData metadata = rs.getMetaData();
			int numberOfRows = rs.getFetchSize();
			int numberOfColumns = metadata.getColumnCount();
			System.out.println("Number of Rows:" + numberOfRows);
			System.out.println("Number of Columns:" + numberOfColumns);
			//String responseValue = apiresponse.get(6);

			while (rs.next()) {
				System.out.println("Rows Not Null");
				dbresponse = new LinkedList<String>();
				for (int i = 0; i < numberOfColumns; i++) {
					if (i == 0) {
						dbkey = rs.getString(i + 2).trim();
						System.out.println("Key value: " + dbkey);
						
					}
				
					dbresponse.add(i, rs.getString(i + 1));
					System.out.println(dbresponse.get(i));

				}
				// System.out.println(dbresponse);
				
				 dbMap.put(dbkey, dbresponse); 			

			}
			
			System.out.println("Plan created and added to the database successfully:"+ dbMap);
			sr.connClose();
		} 
		
		catch (AssertionError e) {
			log.severe("FAILURE STATUS CODE: " + response.getStatusCode());
			log.severe("Response body: " + response.getBody().asString());
			log.severe("Error in response. Check trace");
			e.printStackTrace();
			throw e;
		}	
	}
}
