package main.java.TestData;

import static org.testng.Assert.fail;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

import org.apache.log4j.Logger;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

public class RetrieveTestData {

	final static Logger logger = Logger.getLogger(RetrieveTestData.class);

	public static Map<String, Object> dataBase;
	public static Map<String, Object> appUrl;
	public static Map<String, Object> browser;
	public static Map<String, Object> loanLimitRestriction;
	public static Map<String, Object> LoanSourceHierarchy;
	public static Map<String, Object> HardshipTEMTracking;
	public static Map<String, Object> couponEligibility;
	public static Map<String, Object> ACHLoanRepayment;
	public static Map<String, Object> deferralFeedback;
	public static Map<String, Object> MaxAvailCalcEx;
	public static Map<String, Object> Reporting5500;
	public static Map<String, Object> OngoingEnrollment;
	public static Map<String, Object> ReportingAndActivation;
	public static Map<String, Object> spillOver;
	public static Map<String, Object> genericID;
	
	public static void GetData() {

		try {
			ObjectMapper mapper = new ObjectMapper();
			JsonNode node;
			node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

			dataBase = mapper.readValue(node.get("DataBase").toString(),
					// new File("C:\\Automation\\TestServiceData.json"),
					new TypeReference<Map<String, Object>>() {
					});

		} catch (Exception e) {
			logger.error("Exception", e);
			fail("Exception", e);
		}
		try {
			ObjectMapper mapper = new ObjectMapper();
			JsonNode node;
			node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

			appUrl = mapper.readValue(node.get("AppUrl").toString(),
					// new File("C:\\Automation\\TestServiceData.json"),
					new TypeReference<Map<String, Object>>() {
					});

		} catch (Exception e) {
			logger.error("Exception", e);
			fail("Exception", e);
		}

		try {
			ObjectMapper mapper = new ObjectMapper();
			JsonNode node;
			node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

			browser = mapper.readValue(node.get("Browser").toString(),
					// new File("C:\\Automation\\TestServiceData.json"),
					new TypeReference<Map<String, Object>>() {
					});

		} catch (Exception e) {
			logger.error("Exception", e);
			fail("Exception", e);
		}

		try {
			ObjectMapper mapper = new ObjectMapper();
			JsonNode node;
			node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

			loanLimitRestriction = mapper.readValue(node.get("LoanLimitRestriction").toString(),
					// new File("C:\\Automation\\TestServiceData.json"),
					new TypeReference<Map<String, Object>>() {
					});

		} catch (Exception e) {
			logger.error("Exception", e);
			fail("Exception", e);
		}
		
		
		try {
			ObjectMapper mapper = new ObjectMapper();
			JsonNode node;
			node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));
			
			LoanSourceHierarchy = mapper.readValue(node.get("LoanSourceHierarchy").toString(),
					// new File("C:\\Automation\\TestServiceData.json"),
					new TypeReference<Map<String, Object>>() {});			
			
		} catch (Exception e) {
			logger.error("Exception", e);
			fail("Exception", e);
		}
	
	
	try {
		ObjectMapper mapper = new ObjectMapper();
		JsonNode node;
		node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));
		
		HardshipTEMTracking = mapper.readValue(node.get("HardshipTEMTracking").toString(),
				// new File("C:\\Automation\\TestServiceData.json"),
				new TypeReference<Map<String, Object>>() {});			
		
	} catch (Exception e) {
		logger.error("Exception", e);
		fail("Exception", e);
	}
	try {
		ObjectMapper mapper = new ObjectMapper();
		JsonNode node;
		node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

		couponEligibility = mapper.readValue(node.get("CouponEligibility").toString(),
				// new File("C:\\Automation\\TestServiceData.json"),
				new TypeReference<Map<String, Object>>() {
				});

	} catch (Exception e) {
		logger.error("Exception", e);
		fail("Exception", e);
	}
	
	try {
		ObjectMapper mapper = new ObjectMapper();
		JsonNode node;
		node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

		ACHLoanRepayment = mapper.readValue(node.get("ACHLoanRepayment").toString(),
				// new File("C:\\Automation\\TestServiceData.json"),
				new TypeReference<Map<String, Object>>() {
				});

	} catch (Exception e) {
		logger.error("Exception", e);
		fail("Exception", e);
	}
	try {
		ObjectMapper mapper = new ObjectMapper();
		JsonNode node;
		node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

		deferralFeedback = mapper.readValue(node.get("DeferralFeedback").toString(),
				// new File("C:\\Automation\\TestServiceData.json"),
				new TypeReference<Map<String, Object>>() {
				});

	} catch (Exception e) {
		logger.error("Exception", e);
		fail("Exception", e);
	}
	
	
	try {
		ObjectMapper mapper = new ObjectMapper();
		JsonNode node;
		node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

		MaxAvailCalcEx = mapper.readValue(node.get("MaxAvailCalcEx").toString(),
				// new File("C:\\Automation\\TestServiceData.json"),
				new TypeReference<Map<String, Object>>() {
				});

	} catch (Exception e) {
		logger.error("Exception", e);
		fail("Exception", e);
	}
	try {
		ObjectMapper mapper = new ObjectMapper();
		JsonNode node;
		node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

		Reporting5500 = mapper.readValue(node.get("Reporting5500").toString(),
				// new File("C:\\Automation\\TestServiceData.json"),
				new TypeReference<Map<String, Object>>() {
				});

	} catch (Exception e) {
		logger.error("Exception", e);
		fail("Exception", e);
	}
	try {
		ObjectMapper mapper = new ObjectMapper();
		JsonNode node;
		node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

		OngoingEnrollment = mapper.readValue(node.get("OngoingEnrollment").toString(),
				// new File("C:\\Automation\\TestServiceData.json"),
				new TypeReference<Map<String, Object>>() {
				});

	} catch (Exception e) {
		logger.error("Exception", e);
		fail("Exception", e);
	}
	
	try {
		ObjectMapper mapper = new ObjectMapper();
		JsonNode node;
		node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

		ReportingAndActivation = mapper.readValue(node.get("ReportingAndActivation").toString(),
				// new File("C:\\Automation\\TestServiceData.json"),
				new TypeReference<Map<String, Object>>() {
				});

	} catch (Exception e) {
		logger.error("Exception", e);
		fail("Exception", e);
	}
	try {
		ObjectMapper mapper = new ObjectMapper();
		JsonNode node;
		node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

		spillOver = mapper.readValue(node.get("SpillOver").toString(),
				// new File("C:\\Automation\\TestServiceData.json"),
				new TypeReference<Map<String, Object>>() {
				});

	} catch (Exception e) {
		logger.error("Exception", e);
		fail("Exception", e);
	}
	try {
		ObjectMapper mapper = new ObjectMapper();
		JsonNode node;
		node = mapper.readTree(new File("src/main/java/TestData/TestData.json"));

		genericID = mapper.readValue(node.get("GenericID").toString(),
				// new File("C:\\Automation\\TestServiceData.json"),
				new TypeReference<Map<String, Object>>() {
				});

	} catch (Exception e) {
		logger.error("Exception", e);
		fail("Exception", e);
	}

}
}
